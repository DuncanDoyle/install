---

# deploy datagrid
- name: check if datagrid is deployed
  oc_obj:
    state: list
    oc_binary: "{{ openshift_cli }}"
    name: "{{ datagrid_application_name }}"
    namespace: "{{ namespace }}"
    kind: statefulset
  register: result

- name: deploy datagrid
  shell: |
    {{ openshift_cli }} process -f {{ datagrid_template }} \
    -p APPLICATION_NAME={{ datagrid_application_name }} \
    -p IMAGE={{ datagrid_image }} \
    -p NUMBER_OF_INSTANCES={{ number_of_instances }} \
    -p TOTAL_CONTAINER_MEM={{ total_container_memory }} \
    -p TOTAL_CONTAINER_CPU={{ total_container_cpu }} \
    -p CONTAINER_MEM_REQUEST={{ container_memory_request }} \
    -p CONTAINER_CPU_REQUEST={{ container_cpu_request }} \
    -p TOTAL_CONTAINER_STORAGE={{ total_container_storage }} \
    -p APPLICATION_USER={{ datagrid_application_user }} \
    -p APPLICATION_PASSWORD={{ datagrid_application_password }} \
    | {{ openshift_cli }} create -f - -n {{ namespace }}
  when: result.ansible_module_results.stderr is defined and result.ansible_module_results.stderr != ""

- name: wait until datagrid is up and running
  shell: "{{ openshift_cli }} get statefulset {{ datagrid_application_name }} -o template --template={{ json_template }} -n {{ namespace }}"
  vars:
    json_template: '\{\{.status.readyReplicas\}\}'
  register: result
  until: result.stdout == number_of_instances|quote
  retries: 20
  delay: 30
  changed_when: false